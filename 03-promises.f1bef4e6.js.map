{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAOC,SAASC,cAAc,QAC9BC,OAASF,SAASC,cAAc,UAChCE,WAAaH,SAASC,cAAc,kBACpCG,KAAOJ,SAASC,cAAc,iBAC9BI,OAASL,SAASC,cAAc,oBAuClC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACNN,EACDI,EAAQ,C,SAACN,E,MAASC,IAElBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CA3CbV,EAAKI,OAAOc,iBAAiB,SAI7B,SAAkBC,GAChBA,EAAEC,iBACF,MAAMf,EAAaL,EAAKK,WAAWgB,MAC7Bf,EAAON,EAAKM,KAAKe,MACjBd,EAASP,EAAKO,OAAOc,MAC3B,IAAIC,EAAQ,EAEZ,IAAI,IAAIC,EAAI,EAAGA,GAAKhB,EAAQgB,IAAI,CAI5BD,GADQ,IAANC,EACOlB,EAEAC,EAGXE,EARiBe,EAQOD,GACrBE,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBe,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAGzEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBe,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form : document.querySelector('form'),\n  button : document.querySelector('button'),\n  deleyInput : document.querySelector('[name = delay]'),\n  step : document.querySelector('[name = step]'),\n  amount : document.querySelector('[name = amount]')\n}\n\n\n\nrefs.button.addEventListener('click',onSubmit);\n\n\n\nfunction onSubmit(e){\n  e.preventDefault();\n  const deleyInput = refs.deleyInput.value;\n  const step = refs.step.value;\n  const amount = refs.amount.value;\n  let delay = 0;\n\n  for(let i = 1; i <= amount; i++){\n    const position = i;\n\n    if((i === 1)){\n      delay += deleyInput;\n    }else{\n      delay += step;\n    }\n   \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        \n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n\n  }\n\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() =>{\n      if(shouldResolve){\n        resolve({position,delay});\n      }else{\n        reject({position, delay});\n      }\n    }, delay)\n  })\n  return promise;\n}\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","button","deleyInput","step","amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","value","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f1bef4e6.js.map"}